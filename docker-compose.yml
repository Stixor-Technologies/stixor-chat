version: "3.2"
services:
  backend:
    build:
      context: ./backend
      args:
        - APP_PORT=${APP_PORT}
        - APP_HOST=${APP_HOST}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PG_CONNECTION_STRING=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - TOGETHER_API_KEY
      - OUTLINE_API_KEY
      - USE_OPENAI
      - OPENAI_API_KEY
      - MODEL
      - EMBEDDING_MODEL
      - EMBEDDING_DIM
      - TOP_K
      - APP_HOST
      - APP_PORT
      - SYSTEM_PROMPT
      - LLM_TEMPERATURE
      - LLM_MAX_TOKENS
      - ENVIRONMENT
    restart: unless-stopped

  postgres:
    image: ankane/pgvector:latest
    volumes:
      - ./backend/database-data:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD
        - pg_isready
      interval: 30s
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      PGUSER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: unless-stopped
